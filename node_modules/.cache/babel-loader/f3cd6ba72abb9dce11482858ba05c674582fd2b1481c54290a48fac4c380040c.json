{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-app\\\\src\\\\components\\\\screen\\\\screen.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Screen = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"screen\",\n    children: props.initial\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n};\n\n// Add event to write in screen when pressing keyboard key\n_c = Screen;\nwindow.addEventListener(\"keydown\", event => {\n  keyboardWrite(event.key);\n});\nconst keyboardWrite = key => {\n  let screen = document.querySelector(\"#screen\");\n  let screenContent = screen.innerText;\n  let historic = document.querySelector(\"#historic-container\");\n  let operations = [\"+\", \"x\", \"X\", \"-\", \"/\"];\n\n  // Write numbers\n  if (!isNaN(parseInt(key))) {\n    if (screenContent !== \"0\") {\n      if (operations.includes(screenContent.at(-1))) {\n        screen.innerText += \" \" + key;\n        historic.innerText += \" \" + key;\n      } else {\n        screen.innerText += key;\n        historic.innerText += key;\n      }\n\n      // Numbers, but in screen there is only a \"0\"       \n    } else {\n      screen.innerText = key;\n      historic.innerText = key;\n    }\n  }\n\n  // Write operations (+, -, x, /)\n  else if (operations.includes(key)) {\n    screen.innerText += \" \" + key;\n    historic.innerText += \" \" + key;\n  }\n};\nexport default Screen;\nvar _c;\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"names":["Screen","props","initial","window","addEventListener","event","keyboardWrite","key","screen","document","querySelector","screenContent","innerText","historic","operations","isNaN","parseInt","includes","at"],"sources":["D:/React/my-app/src/components/screen/screen.js"],"sourcesContent":["const Screen = (props) => {\r\n    return (\r\n        <div id=\"screen\">{props.initial}</div>\r\n    );\r\n}\r\n\r\n// Add event to write in screen when pressing keyboard key\r\nwindow.addEventListener(\"keydown\", (event) => {\r\n    keyboardWrite(event.key);\r\n});\r\n\r\nconst keyboardWrite = (key) => {        \r\n    let screen = document.querySelector(\"#screen\");\r\n    let screenContent = screen.innerText;\r\n    let historic = document.querySelector(\"#historic-container\");\r\n    let operations = [\"+\", \"x\", \"X\", \"-\", \"/\"];\r\n    \r\n    // Write numbers\r\n    if (!isNaN(parseInt(key))) {\r\n        if (screenContent !== \"0\") {\r\n            if (operations.includes(screenContent.at(-1))) {\r\n                screen.innerText += \" \" + key;\r\n                historic.innerText += \" \" + key;\r\n            } else {\r\n                screen.innerText += key;\r\n                historic.innerText += key;\r\n            }    \r\n            \r\n        // Numbers, but in screen there is only a \"0\"       \r\n        } else { \r\n            screen.innerText = key;\r\n            historic.innerText = key;\r\n        }\r\n    }\r\n\r\n    // Write operations (+, -, x, /)\r\n    else if (operations.includes(key)) {\r\n        screen.innerText += \" \" + key;\r\n        historic.innerText += \" \" + key;\r\n    }\r\n}\r\n\r\nexport default Screen;"],"mappings":";;AAAA,MAAMA,MAAM,GAAIC,KAAK,IAAK;EACtB,oBACI;IAAK,EAAE,EAAC,QAAQ;IAAA,UAAEA,KAAK,CAACC;EAAO;IAAA;IAAA;IAAA;EAAA,QAAO;AAE9C,CAAC;;AAED;AAAA,KANMF,MAAM;AAOZG,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;EAC1CC,aAAa,CAACD,KAAK,CAACE,GAAG,CAAC;AAC5B,CAAC,CAAC;AAEF,MAAMD,aAAa,GAAIC,GAAG,IAAK;EAC3B,IAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;EAC9C,IAAIC,aAAa,GAAGH,MAAM,CAACI,SAAS;EACpC,IAAIC,QAAQ,GAAGJ,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC;EAC5D,IAAII,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;EAE1C;EACA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACT,GAAG,CAAC,CAAC,EAAE;IACvB,IAAII,aAAa,KAAK,GAAG,EAAE;MACvB,IAAIG,UAAU,CAACG,QAAQ,CAACN,aAAa,CAACO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC3CV,MAAM,CAACI,SAAS,IAAI,GAAG,GAAGL,GAAG;QAC7BM,QAAQ,CAACD,SAAS,IAAI,GAAG,GAAGL,GAAG;MACnC,CAAC,MAAM;QACHC,MAAM,CAACI,SAAS,IAAIL,GAAG;QACvBM,QAAQ,CAACD,SAAS,IAAIL,GAAG;MAC7B;;MAEJ;IACA,CAAC,MAAM;MACHC,MAAM,CAACI,SAAS,GAAGL,GAAG;MACtBM,QAAQ,CAACD,SAAS,GAAGL,GAAG;IAC5B;EACJ;;EAEA;EAAA,KACK,IAAIO,UAAU,CAACG,QAAQ,CAACV,GAAG,CAAC,EAAE;IAC/BC,MAAM,CAACI,SAAS,IAAI,GAAG,GAAGL,GAAG;IAC7BM,QAAQ,CAACD,SAAS,IAAI,GAAG,GAAGL,GAAG;EACnC;AACJ,CAAC;AAED,eAAeP,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}