{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-app\\\\src\\\\components\\\\number-keyboard\\\\number-keyboard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Single button component\nconst NumberButton = props => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"button\",\n    className: \"number-button button\",\n    value: props.number,\n    onClick: props.click\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n};\n\n// All numbers in Keyboard component from min to max\n_c = NumberButton;\nconst Keyboard = props => {\n  // Create array of numbers\n  let numbers = [];\n  for (let i = props.max; i >= props.min; i--) {\n    numbers.push(i);\n  }\n  numbers.push(\".\"); // Used to add decimals\n  numbers.splice(props.min - 2, 0, \"+/-\");\n  // Create button components\n  let keyboard = numbers.map(value => {\n    return /*#__PURE__*/_jsxDEV(NumberButton, {\n      number: value,\n      click: () => {\n        updateHistoric(value);\n        showNumber(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard-numbers calculator-section\",\n    children: keyboard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n// Function to add numbers to the screen\n_c2 = Keyboard;\nconst showNumber = value => {\n  let screen = document.getElementById(\"screen\");\n  let content = screen.innerText;\n  // Manage positive - negative changes\n  if (value === \"+/-\" && content !== \"0\") {\n    screen.in;\n    if (content[0] === \"-\") {\n      screen.innerText = content.substring(1);\n      return;\n    } else {\n      screen.innerText = \"-\" + content;\n      return;\n    }\n  } else if (value === \"+/-\") {\n    return;\n  }\n\n  // When clicked on numbers\n  if (content === \"0\" && value !== \"+/-\") {\n    // Initial screen\n    screen.innerText = value;\n  } else if (sessionStorage.getItem(\"calculate\") === \"yes\") {\n    // Second term in operation to be introduced (first value)\n    screen.innerText = value;\n    sessionStorage.setItem(\"calculate\", \"no\");\n  } else if (sessionStorage.getItem(\"operation\") === \"finished\") {\n    // After operation is finished, if new number is introduced screen is reseted to that number. If new operation is introduced, it continues\n    screen.innerText = value;\n    sessionStorage.setItem(\"operation\", \"\");\n  } else {\n    screen.innerText += value;\n  }\n};\n\n// Function to update the historic\nconst updateHistoric = value => {\n  let historic = document.getElementById(\"historic-container\");\n  historic.innerText += sessionStorage.getItem(\"calculate\") === \"yes\" ? \" \" + value : value;\n  // if changinf postive - negative\n  if (value === \"+/-\") {\n    //console.log(historic.lastChild);\n    //console.log(document.getElementById(\"screen\").innerText);\n  }\n};\nexport default Keyboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"NumberButton\");\n$RefreshReg$(_c2, \"Keyboard\");","map":{"version":3,"names":["NumberButton","props","number","click","Keyboard","numbers","i","max","min","push","splice","keyboard","map","value","updateHistoric","showNumber","screen","document","getElementById","content","innerText","in","substring","sessionStorage","getItem","setItem","historic"],"sources":["D:/React/my-app/src/components/number-keyboard/number-keyboard.js"],"sourcesContent":["// Single button component\r\nconst NumberButton = (props) => {    \r\n    return (\r\n        <input type=\"button\" className=\"number-button button\" value={props.number} onClick={props.click} />\r\n    );\r\n}\r\n\r\n// All numbers in Keyboard component from min to max\r\nconst Keyboard = (props) => {        \r\n    // Create array of numbers\r\n    let numbers = [];\r\n    for(let i = props.max; i >= props.min; i--) {\r\n        numbers.push(i);\r\n    }\r\n    numbers.push(\".\"); // Used to add decimals\r\n    numbers.splice(props.min-2, 0, \"+/-\");\r\n    // Create button components\r\n    let keyboard = numbers.map(value => {\r\n        return <NumberButton number={value} click={() => {\r\n            updateHistoric(value);\r\n            showNumber(value);            \r\n        }} />\r\n    })\r\n    \r\n    return (   \r\n        <div className=\"keyboard-numbers calculator-section\">\r\n            {keyboard}\r\n        </div>\r\n    );\r\n}\r\n\r\n// Function to add numbers to the screen\r\nconst showNumber = value =>{    \r\n    let screen = document.getElementById(\"screen\");\r\n    let content = screen.innerText;\r\n    // Manage positive - negative changes\r\n    if (value === \"+/-\" && content !== \"0\"){\r\n        screen.in\r\n        if (content[0] === \"-\") {\r\n            screen.innerText = content.substring(1);            \r\n            return;\r\n        } else {\r\n            screen.innerText = \"-\" + content;            \r\n            return; \r\n        }\r\n    } else if (value === \"+/-\"){        \r\n        return;\r\n    }\r\n\r\n    // When clicked on numbers\r\n    if (content === \"0\" && value !== \"+/-\") {  // Initial screen\r\n        screen.innerText = value;\r\n    } else if (sessionStorage.getItem(\"calculate\") === \"yes\"){ // Second term in operation to be introduced (first value)\r\n        screen.innerText = value;\r\n        sessionStorage.setItem(\"calculate\", \"no\");    \r\n    } else if (sessionStorage.getItem(\"operation\") === \"finished\"){ // After operation is finished, if new number is introduced screen is reseted to that number. If new operation is introduced, it continues\r\n        screen.innerText = value;\r\n        sessionStorage.setItem(\"operation\" ,\"\");\r\n    } else {\r\n        screen.innerText += value;\r\n    }\r\n}\r\n\r\n// Function to update the historic\r\nconst updateHistoric = value => {\r\n    let historic = document.getElementById(\"historic-container\");\r\n    historic.innerText += (sessionStorage.getItem(\"calculate\") === \"yes\")? \" \" + value: value;\r\n    // if changinf postive - negative\r\n    if (value === \"+/-\") {\r\n        //console.log(historic.lastChild);\r\n        //console.log(document.getElementById(\"screen\").innerText);\r\n    }\r\n}\r\n\r\nexport default Keyboard;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}